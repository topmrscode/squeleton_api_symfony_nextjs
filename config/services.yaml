# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: "../src/"
    exclude:
      - "../src/DependencyInjection/"
      - "../src/Entity/"
      - "../src/Kernel.php"
      - "../src/Tests/"

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: "../src/Controller/"
    tags: ["controller.service_arguments"]

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  # Repositories
  app.user.repository:
    class: App\Repository\UsersRepository
    arguments:
      - Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface

  app.product.repository:
    class: App\Repository\ProductRepository
    arguments:

  # Controllers
  app.auth.controller:
    class: App\Controller\AuthController
    arguments:
      - "@app.user.repository"
      - Psr\Log\LoggerInterface

  acme_api.event.authentication_failure_listener:
    class: App\EventListener\AuthenticationListener
    tags:
      - {
          name: kernel.event_listener,
          event: lexik_jwt_authentication.on_authentication_failure,
          method: onAuthenticationFailureResponse,
        }
  acme_api.event.authentication_success_listener:
    class: App\EventListener\AuthenticationListener
    tags:
      - {
          name: kernel.event_listener,
          event: lexik_jwt_authentication.on_authentication_success,
          method: onAuthenticationSuccessResponse,
        }
  acme_api.event.jwt_invalid_listener:
    class: App\EventListener\JWTListener
    tags:
      - {
          name: kernel.event_listener,
          event: lexik_jwt_authentication.on_jwt_invalid,
          method: onJWTInvalid,
        }
  acme_api.event.jwt_notfound_listener:
    class: App\EventListener\JWTListener
    tags:
      - {
          name: kernel.event_listener,
          event: lexik_jwt_authentication.on_jwt_not_found,
          method: onJWTNotFound,
        }
  acme_api.event.jwt_expired_listener:
    class: App\EventListener\JWTListener
    tags:
      - {
          name: kernel.event_listener,
          event: lexik_jwt_authentication.on_jwt_expired,
          method: onJWTExpired,
        }
  app.product.controller:
    class: App\Controller\ProductController
    arguments:
      - "@app.product.repository"
      - Psr\Log\LoggerInterface
